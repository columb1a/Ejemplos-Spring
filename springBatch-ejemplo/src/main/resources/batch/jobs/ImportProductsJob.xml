<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-3.0.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<import resource="classpath:/batch/configs/SpringDataSource.xml" />
	
	<job id="importProducts" xmlns="http://www.springframework.org/schema/batch">
		<step id="decompress" next="readWriteProducts">
			<tasklet ref="decompressTasklet" />
		</step>
		<step id="readWriteProducts">
			<tasklet>
				<chunk reader="reader" writer="writer" commit-interval="100" />
			</tasklet>
		</step>
	</job>
	
	<bean id="reader"
		class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
		<property name="resource"
			value="file:#{jobParameters['targetDirectory']+jobParameters['targetFile']}" />
		<property name="linesToSkip" value="1" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="PRODUCT_ID,NAME,DESCRIPTION,PRICE" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean class="batch.ProductFieldSetMapper" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="writer" class="batch.ProductJdbcItemWriter">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean id="decompressTasklet" class="batch.DecompressTasklet" scope="step">
		<property name="inputResource"
			value="#{jobParameters['inputResource']}" />
		<property name="targetDirectory"
			value="#{jobParameters['targetDirectory']}" />
		<property name="targetFile"
			value="#{jobParameters['targetFile']}" />
	</bean>

</beans>